# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by('stratum', 'stationid', 'replicate', 'Phylum', 'exclude') %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(rbi2, 'stratum', 'stationid', 'replicate', 'Phylum', 'exclude') %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(grab, 'stratum', 'stationid', 'replicate', 'Phylum', 'exclude') %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum, exclude) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum, exclude) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum, exclude) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum) %>%
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum, exclude) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) #%>%
View(rbi2)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) #%>%
View(rbi2)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
#dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::inner_join(rbi2, assignment, by = 'StationID')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
station_occupation <- tbl(con, "tbl_stationoccupation") %>%
as_tibble %>%
inner_join(assignment, by = 'stationid')
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
View(infauna)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum, Exclude = exclude)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi2 <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi2 %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n)
View(rbi2)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumofMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA")
View(rbi2)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::add_count(Species) %>%
dplyr::rename(NumOfMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA") %>%
dplyr::select(B13_Stratum, StationID, Replicate, Phylum, NumOfMolluscTaxa)
View(rbi2)
View(grab)
View(station_occupation)
View(infauna)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::add_count(taxon)
View(rbi_data)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::rename(NumOfMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA") %>%
dplyr::select(B13_Stratum, StationID, Replicate, Phylum, NumOfMolluscTaxa)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::add_count(taxon)
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::add_count(taxon) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::rename(NumOfMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA") %>%
dplyr::select(B13_Stratum, StationID, Replicate, Phylum, NumOfMolluscTaxa)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::add_count(taxon) %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude', 'n') %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::rename(NumOfMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA") %>%
dplyr::select(B13_Stratum, StationID, Replicate, Phylum, NumOfMolluscTaxa)
View(rbi2)
# the following yields the correct columns. We have the extra columns that are needed for benthic_data
# as we continue to implement the RBI queries, we will decide whether we need to keep all of these columns
# if we do, it might be worth going through and adding this to the original benthic_query.R file
# and include this with all of the benthic_data we save
rbi_data <- grab %>%
dplyr::filter(benthicinfauna == 'Yes') %>%
dplyr::inner_join(station_occupation, by = c('stationid','sampledate' = 'occupationdate')) %>%
dplyr::inner_join(infauna, by = c('stationid','sampledate')) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'exclude') %>%
dplyr::inner_join(Taxonomic_Info, by = c('taxon' = 'Taxon')) %>%
dplyr::mutate_if(is.numeric, list(~na_if(., -88))) %>%
dplyr::add_count(taxon) %>%
dplyr::select('stationid','replicate','sampledate','latitude','longitude','taxon','abundance','salinity', 'stratum', 'Phylum', 'exclude', 'n') %>%
dplyr::group_by(stratum, stationid, replicate, Phylum) %>%
dplyr::rename(species = taxon) %>%
dplyr::rename(StationID = stationid, Replicate = replicate, SampleDate = sampledate, Latitude = latitude, Longitude = longitude, Species = species, Abundance = abundance, Salinity = salinity, B13_Stratum = stratum)
# need to verify this table with David
# columns needed in RBI: B13_Stratum, StationID, Replicate, Phylum, NumofMolluscTaxa
rbi2 <- rbi_data %>%
dplyr::rename(NumOfMolluscTaxa = n) %>%
dplyr::filter(Phylum == "MOLLUSCA") %>%
dplyr::select(B13_Stratum, StationID, Replicate, Phylum, NumOfMolluscTaxa)
View(rbi2)
View(Taxonomic_Info)
View(station_occupation)
test <- Taxonomic_Info %>%
dplyr::right_join(station_occupation) %>%
dplyr::left_join(infauna, by = 'stationid')
test <- Taxonomic_Info %>%
dplyr::right_join(station_occupation)
View(station_occupation)
# Bring in our tables from the database
infauna <- tbl(con, "tbl_infaunalabundance_initial") %>% as_tibble
save(infauna, file = 'infauna_data.csv')
grab <- tbl(con, "tbl_grabevent") %>%
as_tibble %>%
dplyr::filter(grabeventnumber == 1)
save(grab, file= 'grab_data.csv')
assignment <- tbl(con, "field_assignment_table") %>%
as_tibble #%>%
#dplyr::filter(stratum == "Bays" | stratum == "Ports" | stratum == "Estuaries" | stratum == "Brackish Estuaries")
save(assignment, file = "full-assignment.csv")
assignment <- tbl(con, "field_assignment_table") %>%
as_tibble %>%
dplyr::filter(stratum == "Bays" | stratum == "Ports" | stratum == "Estuaries" | stratum == "Brackish Estuaries")
save(assignment, file = "assignment-filtered-strata.csv")
station_occupation <- tbl(con, "tbl_stationoccupation") %>%
as_tibble %>%
inner_join(assignment, by = 'stationid')
save(station_occupation, file = 'station_occupation.csv')
source('~/Projects/SQOUnified/R/BRI.R')
source('~/Projects/SQOUnified/R/BRI.R')
install.packages("sqldf")
source('~/Projects/SQOUnified/R/BRI.R')
BRI()
install.packages("tcltk")
source('~/Projects/SQOUnified/R/BRI.R')
BRI()
load("~/Projects/SQOUnified/data/Taxonomic_Info.Rdata")
Taxonomic_Info
source('~/Projects/SQOUnified/R/BRI.R')
Taxonomic_Info
source('~/Projects/SQOUnified/R/BRI.R')
BRI1
Taxonomic_Info
assignment
BRI1
BRI1
Taxonomic_Info
load("~/Projects/SQOUnified/data/EG_Ref.Rdata")
EG_Ref
load("~/Projects/SQOUnified/data/benthic_data.Rdata")
benthic_data
view(Taxonomic_Info)
library(readxl)
bcodes <- read_excel("~/Desktop/BCodeScore.xlsx")
bcodes
view(bcodes)
names(bcodes)
Taxonomic_Info
Taxonomic_Info <- Taxonomic_Info %>% left_join(bcodes, by = 'Taxon')
view(Taxonomic_Info)
save(Taxonomic_Info)
save(Taxonomic_Info, "Taxonomic_Info.RData")
?save
getwd()
save(Taxonomic_Info, "data/Taxonomic_Info.RData")
save("data/Taxonomic_Info.RData", Taxonomic_Info)
save(Taxonomic_Info, file = "data/Taxonomic_Info.RData")
load("~/Projects/SQOUnified/data/Taxonomic_Info.Rdata")
view(Taxonomic_Info)
source('~/Projects/SQOUnified/R/BRI.R')
view(Taxonomic_Info)
source('~/Projects/SQOUnified/R/BRI.R')
source('~/Projects/SQOUnified/R/BRI.R')
BRI1
source('~/Projects/SQOUnified/R/BRI.R')
BRI1
