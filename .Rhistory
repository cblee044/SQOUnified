load("~/Desktop/Projects/SQOUnified/data/benthic_data.Rdata")
DB = benthic_data
SQO = "all"
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
source('~/Desktop/Projects/SQOUnified/R/IBI.R')
install.packages("sqldf")
install.packages("sqldf")
source('~/Desktop/Projects/SQOUnified/R/RBI.R')
install.packages("vegan")
source('~/Desktop/Projects/SQOUnified/R/MAMBI.R')
source('~/Desktop/Projects/SQOUnified/R/BRI.R')
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
source('~/Desktop/Projects/SQOUnified/R/MAMBI.R')
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
# Good-Bad Benchmarks following Pelletier et al. 2018
Saline_Standards <- read_xlsx("Pelletier2018_Standards.xlsx", sheet = "Saline Sites")
getwd()
# Good-Bad Benchmarks following Pelletier et al. 2018
Saline_Standards <- read_xlsx("/data/Pelletier2018_Standards.xlsx", sheet = "Saline Sites")
# Good-Bad Benchmarks following Pelletier et al. 2018
Saline_Standards <- read_xlsx("data/Pelletier2018_Standards.xlsx", sheet = "Saline Sites")
save(Saline_Standards, file = 'data/Saline_Standards.Rdata')
load("~/Desktop/Projects/SQOUnified/data/Saline_Standards.Rdata")
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
source('~/Desktop/Projects/SQOUnified/R/EQR.R')
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
Taxonomic_Info <- read.csv("data/Master - Taxonomic Info 1-2-20 for Robert.csv")
save(Taxonomic_Info, file = 'data/Taxonomic_Info.Rdata')
# Compute ALL SQO scores
if (SQO == "all"){
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
rbi.scores <- RBI(DB)
ibi.scores <- IBI(DB)
bri.scores <- BRI(DB)
final.scores <- mambi.score %>%
dplyr::full_join(bri.scores) %>%
dplyr::full_join(rbi.scores) %>%
dplyr::full_join(ibi.scores) %>% # will add other scores to this data frame as they are computed
dplyr::select("StationID", "Replicate", "SampleDate", "B13_Stratum", "Index", "Score",
"Category", "Category_Score", "MAMBI_Score", "New_MAMBI_Condition",
"Use_AMBI", "Use_MAMBI", "YesEG")
} else {
mambi.score <- MAMBI(DB, EG_File_Name="data/Ref - EG Values 2018.csv", EG_Scheme="Hybrid")
final.scores <- mambi.score %>%
dplyr::left_join(rbi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(ibi.scores, by = c("StationID", "Replicate")) %>%
dplyr::left_join(bri.scores, by = c("StationID", "Replicate"))
# will add other scores to this data frame as they are computed
}
View(final.scores)
library(devtools)
install()
install()
install()
install()
library(SQOUnified)
benthic_data
load(benthic_data)
load('benthic_data')
load('data/benthic_data')
getwd()
load("~/Desktop/Projects/SQOUnified/data/benthic_data.Rdata")
View(benthic_data)
